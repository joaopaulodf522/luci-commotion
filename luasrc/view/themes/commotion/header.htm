<%#
    Header.htm is a LuCI theme template that builds the top portion 
    of each web UI page. It refers to the LuCI header, not the HTML
    header, although the HTML header is included in this file.

    HTML begins after LuCI/Lua function definitions.

    LuCI - Lua Configuration Interface
    Copyright 2008 Steven Barth <steven@midlink.org>
    Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
    Copyright 2012 David Menting <david@nut-bolt.nl>
    Copyright 2013 Griffin Boyce <griffin@opentechinstitute.org>
    Copyright 2013 Seamus Tuohy <s2e@opentechinstitute.org>
    Copyright 2014 Andrew Reynolds <andrew@opentechinstitute.org>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0
-%>

<%# Moving these functions to another template puts them out of scope
    with no obvious way to pass variables to includes.
    Keeping functions in header template for now.

    Use this syntax:
    include("themes/commotion/functions/header-prep",
            {var=var, var=var})
-%>

<%
    local crypto = require "luci.commotion.crypto"
    local http = require "luci.http"
    local urlencode = require "luci.http.protocol".urlencode
    local sys  = require "luci.sys"
    local disp = require "luci.dispatcher"
    local cdisp = require "luci.commotion.dispatch"

    -- ensure that client is running https 
    crypto.check_https("/admin/", luci.http.getenv())

    -- send as HTML5
    http.prepare_content("text/html")


    -- Prepare variables for use in templates
    hostname = sys.hostname()

    -- BEGIN menu preparation
    --The request path (eg. http://ipaddress/cgi-bin/luci/;id-string/THIS/THIS/THIS/)
    request  = disp.context.path
    local request2 = disp.context.request

    -- Node is our position on the menu tree
    -- ROOT NODE OF PATH (e.g. admin on admin pages)
    category = request[1]
    section = request[2]

    -- SAME AGAIN // cattree indicates submenu item
    cattree  = category and disp.node(category)

    -- leaf is length of request2
    local leaf = request2[#request2] 

    -- Create a node of the local thread (the current context)
    tree = disp.node()

    -- Show the local node (current menu) on the tree
    node = disp.context.dispatched

    -- An Ordered table of node names of this tree s child nodes
    local categories = disp.node_childs(tree)

    local c = tree
    local i, r

    -- tag all nodes leading to this page
    for i, r in ipairs(request) do
        if c.nodes and c.nodes[r] then
            c = c.nodes[r]
            c._menu_selected = true
        end
    end
    -- END menu preparation

    -- BEGIN mesh ip generation (mesh_ip)
    uci = require "luci.model.uci".cursor()
    ubus = require "ubus"
    conn = ubus.connect()

    if not conn then
        error("Failed to connect to ubusd")
    end

    mesh_ip = "None"
    uci:foreach("wireless", "wifi-iface", function(s)
        if s and s.mode and s.mode == "adhoc" and s.network then
            local iface = conn:call("network.interface."..s.network, "status", {})
                if iface ~= nil and iface["ipv4-address"] then
                    if iface["ipv4-address"][1] and iface["ipv4-address"][1].address then
                        mesh_ip = iface["ipv4-address"][1].address
                    else
                        mesh_ip = "Unknown"
                    end
                elseif mesh_ip == "None" then
                    mesh_ip = "Unknown"
                end
        end
    end
    )
    conn:close()
    -- END mesh ip generation

    -- BEGIN check for unsaved changes (ucichanges)
    -- ucichanges local. Will cause problems
    if tree.nodes[category] and tree.nodes[category].ucidata then
        local ucichanges = 0

        for i, j in pairs(require("luci.model.uci").cursor():changes()) do
            for k, l in pairs(j) do
                for m, n in pairs(l) do
                    ucichanges = ucichanges + 1;
                end
            end
        end
    end
    -- END check for unsaved changes
-%>
<!DOCTYPE html>
<html lang="<%=luci.i18n.context.lang%>">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=yes" />
        <title>
            <%include("themes/commotion/functions/gen-title")%>
        </title>
        <%include("themes/commotion/stylesheets")%>
        <%include("themes/commotion/javascript")%>
    </head>

    <!-- node.title needs to be urlencoded -->
    <body class="lang_<%=luci.i18n.context.lang%> <%- if node then %> <%= urlencode(striptags( node.title )) %> <%- end %>">

        <header>
            <%include("themes/commotion/top-branding",
            {ucichanges=ucichanges, tree=tree, controller=controller, category=category})%>
        </header>
        <!-- Begin maincontent -->
        <section id="maincontent">
            <%include("themes/commotion/sidenav",
            {controller=controller, cattree=cattree, category=category, node=node, section=section})%>
        <!-- /section in footer.htm -->
